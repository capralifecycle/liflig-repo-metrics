{
  "Resources": {
    "UserPoolUserPoolClient40176907": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": "eu-west-1_oGQHzXmbo",
        "AllowedOAuthFlows": [
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://example.com"
        ],
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": true,
        "PreventUserExistenceErrors": "ENABLED",
        "SupportedIdentityProviders": [
          "Google",
          "COGNITO"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/UserPool/UserPoolClient/Resource"
      }
    },
    "DataBucketE3889A50": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/DataBucket/Resource"
      }
    },
    "WebappBucket620531E5": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/WebappBucket/Resource"
      }
    },
    "WebappBucketPolicyB03C4E01": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "WebappBucket620531E5"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "DistributionOrigin1S3Origin5F5C0696",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebappBucket620531E5",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebappBucket620531E5",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/WebappBucket/Policy/Resource"
      }
    },
    "WebappDataBucket777722B9": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/WebappDataBucket/Resource"
      }
    },
    "WebappDataBucketPolicy300EA527": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "WebappDataBucket777722B9"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "DistributionOrigin2S3OriginE484D4BF",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebappDataBucket777722B9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebappDataBucket777722B9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/WebappDataBucket/Policy/Resource"
      }
    },
    "AuthNonceSigningSecretC47F85D8": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventD98C7326",
            "Arn"
          ]
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/NonceSigningSecret/Resource/Default"
      }
    },
    "AuthClientSecretCustomResourcePolicyA4C1D5EC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":cognito-idp:eu-west-1:001112238813:userpool/eu-west-1_oGQHzXmbo"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AuthClientSecretCustomResourcePolicyA4C1D5EC",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/ClientSecret/Resource/CustomResourcePolicy/Resource"
      }
    },
    "AuthClientSecret768E9C19": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "service": "CognitoIdentityServiceProvider",
          "action": "describeUserPoolClient",
          "parameters": {
            "UserPoolId": "eu-west-1_oGQHzXmbo",
            "ClientId": {
              "Ref": "UserPoolUserPoolClient40176907"
            }
          },
          "physicalResourceId": {
            "id": {
              "Fn::Join": [
                "",
                [
                  "eu-west-1_oGQHzXmbo-",
                  {
                    "Ref": "UserPoolUserPoolClient40176907"
                  }
                ]
              ]
            }
          }
        },
        "Update": {
          "service": "CognitoIdentityServiceProvider",
          "action": "describeUserPoolClient",
          "parameters": {
            "UserPoolId": "eu-west-1_oGQHzXmbo",
            "ClientId": {
              "Ref": "UserPoolUserPoolClient40176907"
            }
          },
          "physicalResourceId": {
            "id": {
              "Fn::Join": [
                "",
                [
                  "eu-west-1_oGQHzXmbo-",
                  {
                    "Ref": "UserPoolUserPoolClient40176907"
                  }
                ]
              ]
            }
          }
        },
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "AuthClientSecretCustomResourcePolicyA4C1D5EC"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/ClientSecret/Resource/Resource/Default"
      }
    },
    "AuthCheckAuthFnC12AAE69": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eCheckAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/CheckAuthFn/Resource/Default"
      }
    },
    "AuthHttpHeadersFn7D541668": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eHttpHeadersFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/HttpHeadersFn/Resource/Default"
      }
    },
    "AuthParseAuthFn975D8094": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eParseAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/ParseAuthFn/Resource/Default"
      }
    },
    "AuthRefreshAuthFnEA5CBBAE": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eRefreshAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/RefreshAuthFn/Resource/Default"
      }
    },
    "AuthSignOutFnD060B75E": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eSignOutFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/SignOutFn/Resource/Default"
      }
    },
    "AuthClientUpdateCustomResourcePolicyF8E9AEC5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:UpdateUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":cognito-idp:eu-west-1:001112238813:userpool/eu-west-1_oGQHzXmbo"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AuthClientUpdateCustomResourcePolicyF8E9AEC5",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/ClientUpdate/Resource/CustomResourcePolicy/Resource"
      }
    },
    "AuthClientUpdate3823E358": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "service": "CognitoIdentityServiceProvider",
          "action": "updateUserPoolClient",
          "parameters": {
            "AllowedOAuthFlows": [
              "code"
            ],
            "AllowedOAuthFlowsUserPoolClient": "TRUE:BOOLEAN",
            "SupportedIdentityProviders": [
              "COGNITO",
              "Google"
            ],
            "AllowedOAuthScopes": [
              "phone",
              "email",
              "profile",
              "openid",
              "aws.cognito.signin.user.admin"
            ],
            "ClientId": {
              "Ref": "UserPoolUserPoolClient40176907"
            },
            "CallbackURLs": [
              {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Fn::GetAtt": [
                        "Distribution830FAC52",
                        "DomainName"
                      ]
                    },
                    "/auth/callback"
                  ]
                ]
              }
            ],
            "LogoutURLs": [
              {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Fn::GetAtt": [
                        "Distribution830FAC52",
                        "DomainName"
                      ]
                    },
                    "/"
                  ]
                ]
              }
            ],
            "UserPoolId": "eu-west-1_oGQHzXmbo"
          },
          "physicalResourceId": {
            "id": {
              "Fn::Join": [
                "",
                [
                  "eu-west-1_oGQHzXmbo-",
                  {
                    "Ref": "UserPoolUserPoolClient40176907"
                  }
                ]
              ]
            }
          }
        },
        "Update": {
          "service": "CognitoIdentityServiceProvider",
          "action": "updateUserPoolClient",
          "parameters": {
            "AllowedOAuthFlows": [
              "code"
            ],
            "AllowedOAuthFlowsUserPoolClient": "TRUE:BOOLEAN",
            "SupportedIdentityProviders": [
              "COGNITO",
              "Google"
            ],
            "AllowedOAuthScopes": [
              "phone",
              "email",
              "profile",
              "openid",
              "aws.cognito.signin.user.admin"
            ],
            "ClientId": {
              "Ref": "UserPoolUserPoolClient40176907"
            },
            "CallbackURLs": [
              {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Fn::GetAtt": [
                        "Distribution830FAC52",
                        "DomainName"
                      ]
                    },
                    "/auth/callback"
                  ]
                ]
              }
            ],
            "LogoutURLs": [
              {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Fn::GetAtt": [
                        "Distribution830FAC52",
                        "DomainName"
                      ]
                    },
                    "/"
                  ]
                ]
              }
            ],
            "UserPoolId": "eu-west-1_oGQHzXmbo"
          },
          "physicalResourceId": {
            "id": {
              "Fn::Join": [
                "",
                [
                  "eu-west-1_oGQHzXmbo-",
                  {
                    "Ref": "UserPoolUserPoolClient40176907"
                  }
                ]
              ]
            }
          }
        },
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "AuthClientUpdateCustomResourcePolicyF8E9AEC5"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Auth/ClientUpdate/Resource/Resource/Default"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.cloudfront-auth.generate-secret.provider/Function/ServiceRole/Resource"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "DependsOn": [
        "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.cloudfront-auth.generate-secret.provider/Function/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.cloudfront-auth.generate-secret.provider/Provider/framework-onEvent/ServiceRole/Resource"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528",
        "Roles": [
          {
            "Ref": "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.cloudfront-auth.generate-secret.provider/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventD98C7326": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "AWS CDK resource provider framework - onEvent (incub-repo-metrics-main/henrist.cloudfront-auth.generate-secret.provider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99",
                "Arn"
              ]
            }
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528",
        "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.cloudfront-auth.generate-secret.provider/Provider/framework-onEvent/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/AWS679f53fac002430cb0da5b7982bd2287/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.lambda-config.provider/UpdateCodeFn/ServiceRole/Resource"
      }
    },
    "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:GetFunction",
                "lambda:UpdateFunctionCode"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A",
        "Roles": [
          {
            "Ref": "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.lambda-config.provider/UpdateCodeFn/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "henristlambdaconfigproviderUpdateCodeFnBF8DF66B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 10
      },
      "DependsOn": [
        "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A",
        "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.lambda-config.provider/UpdateCodeFn/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.lambda-config.provider/Provider/framework-onEvent/ServiceRole/Resource"
      }
    },
    "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "henristlambdaconfigproviderUpdateCodeFnBF8DF66B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E",
        "Roles": [
          {
            "Ref": "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.lambda-config.provider/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "AWS CDK resource provider framework - onEvent (incub-repo-metrics-main/henrist.lambda-config.provider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "henristlambdaconfigproviderUpdateCodeFnBF8DF66B",
                "Arn"
              ]
            }
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E",
        "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/henrist.lambda-config.provider/Provider/framework-onEvent/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "DistributionOrigin1S3Origin5F5C0696": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for incubrepometricsmainDistributionOrigin1E6A7A00E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Distribution/Origin1/S3Origin/Resource"
      }
    },
    "DistributionOrigin2S3OriginE484D4BF": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for incubrepometricsmainDistributionOrigin2A3D63EE6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Distribution/Origin2/S3Origin/Resource"
      }
    },
    "Distribution830FAC52": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "CacheBehaviors": [
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "AuthParseAuthFn975D8094",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/auth/callback",
              "TargetOriginId": "incubrepometricsmainDistributionOrigin1E6A7A00E",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "AuthRefreshAuthFnEA5CBBAE",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/auth/refresh",
              "TargetOriginId": "incubrepometricsmainDistributionOrigin1E6A7A00E",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "AuthSignOutFnD060B75E",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/auth/sign-out",
              "TargetOriginId": "incubrepometricsmainDistributionOrigin1E6A7A00E",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "AuthCheckAuthFnC12AAE69",
                      "FunctionArn"
                    ]
                  }
                },
                {
                  "EventType": "origin-response",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "AuthHttpHeadersFn7D541668",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/data/*",
              "TargetOriginId": "incubrepometricsmainDistributionOrigin2A3D63EE6",
              "ViewerProtocolPolicy": "redirect-to-https"
            }
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "LambdaFunctionAssociations": [
              {
                "EventType": "viewer-request",
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "AuthCheckAuthFnC12AAE69",
                    "FunctionArn"
                  ]
                }
              },
              {
                "EventType": "origin-response",
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "AuthHttpHeadersFn7D541668",
                    "FunctionArn"
                  ]
                }
              }
            ],
            "TargetOriginId": "incubrepometricsmainDistributionOrigin1E6A7A00E",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "WebappBucket620531E5",
                  "RegionalDomainName"
                ]
              },
              "Id": "incubrepometricsmainDistributionOrigin1E6A7A00E",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "DistributionOrigin1S3Origin5F5C0696"
                      }
                    ]
                  ]
                }
              }
            },
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "WebappDataBucket777722B9",
                  "RegionalDomainName"
                ]
              },
              "Id": "incubrepometricsmainDistributionOrigin2A3D63EE6",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "DistributionOrigin2S3OriginE484D4BF"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "PriceClass": "PriceClass_100"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Distribution/Resource"
      }
    },
    "DeployWebappCustomResourceC7A505E4": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          "cdk-hnb659fds-assets-001112238813-eu-west-1"
        ],
        "SourceObjectKeys": [
          "snapshot-value.zip"
        ],
        "DestinationBucketName": {
          "Ref": "WebappBucket620531E5"
        },
        "Prune": true,
        "DistributionId": {
          "Ref": "Distribution830FAC52"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/DeployWebapp/CustomResource/Default"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::cdk-hnb659fds-assets-001112238813-eu-west-1"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::cdk-hnb659fds-assets-001112238813-eu-west-1/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebappBucket620531E5",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebappBucket620531E5",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "CollectorServiceRole78F40CC4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Collector/ServiceRole/Resource"
      }
    },
    "CollectorServiceRoleDefaultPolicy51652F58": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/github-token-??????"
                  ]
                ]
              }
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/snyk-token-??????"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DataBucketE3889A50",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DataBucketE3889A50",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CollectorServiceRoleDefaultPolicy51652F58",
        "Roles": [
          {
            "Ref": "CollectorServiceRole78F40CC4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Collector/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Collector9EBA7CF5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.collectHandler",
        "Role": {
          "Fn::GetAtt": [
            "CollectorServiceRole78F40CC4",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Environment": {
          "Variables": {
            "GITHUB_TOKEN_SECRET_ID": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/github-token"
                ]
              ]
            },
            "SNYK_TOKEN_SECRET_ID": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/snyk-token"
                ]
              ]
            },
            "DATA_BUCKET_NAME": {
              "Ref": "DataBucketE3889A50"
            },
            "XDG_CACHE_HOME": "/tmp"
          }
        },
        "MemorySize": 256,
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 300
      },
      "DependsOn": [
        "CollectorServiceRoleDefaultPolicy51652F58",
        "CollectorServiceRole78F40CC4"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Collector/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "CollectorScheduleDC767626": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 0/6 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Collector9EBA7CF5",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/CollectorSchedule/Resource"
      }
    },
    "CollectorScheduleAllowEventRuleincubrepometricsmainCollectorSchedule00F836868B72A2BA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Collector9EBA7CF5",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CollectorScheduleDC767626",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/CollectorSchedule/AllowEventRuleincubrepometricsmainCollectorSchedule00F83686"
      }
    },
    "AggregatorServiceRole50457C61": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Aggregator/ServiceRole/Resource"
      }
    },
    "AggregatorServiceRoleDefaultPolicyEBDCB410": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudfront:CreateInvalidation",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DataBucketE3889A50",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DataBucketE3889A50",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebappDataBucket777722B9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebappDataBucket777722B9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AggregatorServiceRoleDefaultPolicyEBDCB410",
        "Roles": [
          {
            "Ref": "AggregatorServiceRole50457C61"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Aggregator/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Aggregator84F1B3DF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.aggregateHandler",
        "Role": {
          "Fn::GetAtt": [
            "AggregatorServiceRole50457C61",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Environment": {
          "Variables": {
            "DATA_BUCKET_NAME": {
              "Ref": "DataBucketE3889A50"
            },
            "WEBAPP_DATA_BUCKET_NAME": {
              "Ref": "WebappDataBucket777722B9"
            },
            "CF_DISTRIBUTION_ID": {
              "Ref": "Distribution830FAC52"
            }
          }
        },
        "MemorySize": 256,
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 300
      },
      "DependsOn": [
        "AggregatorServiceRoleDefaultPolicyEBDCB410",
        "AggregatorServiceRole50457C61"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/Aggregator/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "AggregatorSchedule80C87EEE": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(10 0/6 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Aggregator84F1B3DF",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/AggregatorSchedule/Resource"
      }
    },
    "AggregatorScheduleAllowEventRuleincubrepometricsmainAggregatorSchedule24350F9BEBBBC3DE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Aggregator84F1B3DF",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AggregatorSchedule80C87EEE",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-main/AggregatorSchedule/AllowEventRuleincubrepometricsmainAggregatorSchedule24350F9B"
      }
    }
  },
  "Parameters": {
    "AuthCheckAuthFnImportNonceB0C38324": {
      "Type": "String",
      "Default": "snapshot"
    },
    "AuthHttpHeadersFnImportNonceEA60F8FB": {
      "Type": "String",
      "Default": "snapshot"
    },
    "AuthParseAuthFnImportNonceDB90BFAF": {
      "Type": "String",
      "Default": "snapshot"
    },
    "AuthRefreshAuthFnImportNonce259C9C85": {
      "Type": "String",
      "Default": "snapshot"
    },
    "AuthSignOutFnImportNonce71DBA4CA": {
      "Type": "String",
      "Default": "snapshot"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eCheckAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76e-CheckAuthFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eHttpHeadersFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76e-HttpHeadersFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eParseAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76e-ParseAuthFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eRefreshAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76e-RefreshAuthFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76eSignOutFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c86b17d0e6abb3b5e0ceedb5d4c0e99c0bfacda76e-SignOutFunction-function-arn"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Outputs": {
    "DataBucketNameOutput": {
      "Value": {
        "Ref": "DataBucketE3889A50"
      }
    },
    "WebappDataBucketNameOutput": {
      "Value": {
        "Ref": "WebappDataBucket777722B9"
      }
    },
    "WebappUrlOutput": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "Distribution830FAC52",
                "DomainName"
              ]
            }
          ]
        ]
      }
    },
    "DistributionIdOutput": {
      "Value": {
        "Ref": "Distribution830FAC52"
      }
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 4 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}