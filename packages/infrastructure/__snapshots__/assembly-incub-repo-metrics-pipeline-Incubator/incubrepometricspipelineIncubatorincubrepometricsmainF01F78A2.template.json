{
  "Resources": {
    "UserPoolUserPoolClient40176907": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "AllowedOAuthFlows": [
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://example.com"
        ],
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": true,
        "PreventUserExistenceErrors": "ENABLED",
        "SupportedIdentityProviders": [
          "Google",
          "COGNITO"
        ],
        "UserPoolId": "eu-west-1_oGQHzXmbo"
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/UserPool/UserPoolClient/Resource"
      }
    },
    "DataBucketE3889A50": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/DataBucket/Resource"
      }
    },
    "WebappBucket620531E5": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappBucket/Resource"
      }
    },
    "WebappBucketPolicyB03C4E01": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "WebappBucket620531E5"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "DistributionOrigin1S3Origin5F5C0696",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebappBucket620531E5",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappBucket/Policy/Resource"
      }
    },
    "WebappDataBucket777722B9": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDataBucket/Resource"
      }
    },
    "WebappDataBucketPolicy300EA527": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "WebappDataBucket777722B9"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "DistributionOrigin2S3OriginE484D4BF",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebappDataBucket777722B9",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDataBucket/Policy/Resource"
      }
    },
    "CloudFrontAuthNonceSigningSecret87132FA1": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "lifliginfracloudfrontauthgeneratesecretproviderProviderframeworkonEvent629CC1D7",
            "Arn"
          ]
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/NonceSigningSecret/Resource/Default"
      }
    },
    "CloudFrontAuthClientSecret24A8B19D": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"eu-west-1_oGQHzXmbo\",\"ClientId\":\"",
              {
                "Ref": "UserPoolUserPoolClient40176907"
              },
              "\"},\"physicalResourceId\":{\"id\":\"eu-west-1_oGQHzXmbo-",
              {
                "Ref": "UserPoolUserPoolClient40176907"
              },
              "\"}}"
            ]
          ]
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"eu-west-1_oGQHzXmbo\",\"ClientId\":\"",
              {
                "Ref": "UserPoolUserPoolClient40176907"
              },
              "\"},\"physicalResourceId\":{\"id\":\"eu-west-1_oGQHzXmbo-",
              {
                "Ref": "UserPoolUserPoolClient40176907"
              },
              "\"}}"
            ]
          ]
        },
        "InstallLatestAwsSdk": false
      },
      "DependsOn": [
        "CloudFrontAuthClientSecretCustomResourcePolicy0C804D38"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/ClientSecret/Resource/Resource/Default"
      }
    },
    "CloudFrontAuthClientSecretCustomResourcePolicy0C804D38": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":cognito-idp:eu-west-1:001112238813:userpool/eu-west-1_oGQHzXmbo"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CloudFrontAuthClientSecretCustomResourcePolicy0C804D38",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/ClientSecret/Resource/CustomResourcePolicy/Resource"
      }
    },
    "CloudFrontAuthCheckAuthFnF82A663E": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "lifliginfralambdaconfigproviderProviderframeworkonEvent1D60D68A",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74CheckAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthClientSecret24A8B19D",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthNonceSigningSecret87132FA1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/CheckAuthFn/Resource/Default"
      }
    },
    "CloudFrontAuthHttpHeadersFn7FA81DC9": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "lifliginfralambdaconfigproviderProviderframeworkonEvent1D60D68A",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74HttpHeadersFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthClientSecret24A8B19D",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthNonceSigningSecret87132FA1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/HttpHeadersFn/Resource/Default"
      }
    },
    "CloudFrontAuthParseAuthFn462E5263": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "lifliginfralambdaconfigproviderProviderframeworkonEvent1D60D68A",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74ParseAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthClientSecret24A8B19D",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthNonceSigningSecret87132FA1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/ParseAuthFn/Resource/Default"
      }
    },
    "CloudFrontAuthRefreshAuthFnF048EC20": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "lifliginfralambdaconfigproviderProviderframeworkonEvent1D60D68A",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74RefreshAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthClientSecret24A8B19D",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthNonceSigningSecret87132FA1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/RefreshAuthFn/Resource/Default"
      }
    },
    "CloudFrontAuthSignOutFn7E430F35": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "lifliginfralambdaconfigproviderProviderframeworkonEvent1D60D68A",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74SignOutFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthClientSecret24A8B19D",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "CloudFrontAuthNonceSigningSecret87132FA1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/SignOutFn/Resource/Default"
      }
    },
    "CloudFrontAuthClientUpdateE28748C6": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"updateUserPoolClient\",\"parameters\":{\"AllowedOAuthFlows\":[\"code\"],\"AllowedOAuthFlowsUserPoolClient\":true,\"SupportedIdentityProviders\":[\"Google\"],\"AllowedOAuthScopes\":[\"phone\",\"email\",\"profile\",\"openid\",\"aws.cognito.signin.user.admin\"],\"ClientId\":\"",
              {
                "Ref": "UserPoolUserPoolClient40176907"
              },
              "\",\"CallbackURLs\":[\"https://",
              {
                "Fn::GetAtt": [
                  "Distribution830FAC52",
                  "DomainName"
                ]
              },
              "/auth/callback\"],\"LogoutURLs\":[\"https://",
              {
                "Fn::GetAtt": [
                  "Distribution830FAC52",
                  "DomainName"
                ]
              },
              "/\"],\"UserPoolId\":\"eu-west-1_oGQHzXmbo\"},\"physicalResourceId\":{\"id\":\"eu-west-1_oGQHzXmbo-",
              {
                "Ref": "UserPoolUserPoolClient40176907"
              },
              "\"}}"
            ]
          ]
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"updateUserPoolClient\",\"parameters\":{\"AllowedOAuthFlows\":[\"code\"],\"AllowedOAuthFlowsUserPoolClient\":true,\"SupportedIdentityProviders\":[\"Google\"],\"AllowedOAuthScopes\":[\"phone\",\"email\",\"profile\",\"openid\",\"aws.cognito.signin.user.admin\"],\"ClientId\":\"",
              {
                "Ref": "UserPoolUserPoolClient40176907"
              },
              "\",\"CallbackURLs\":[\"https://",
              {
                "Fn::GetAtt": [
                  "Distribution830FAC52",
                  "DomainName"
                ]
              },
              "/auth/callback\"],\"LogoutURLs\":[\"https://",
              {
                "Fn::GetAtt": [
                  "Distribution830FAC52",
                  "DomainName"
                ]
              },
              "/\"],\"UserPoolId\":\"eu-west-1_oGQHzXmbo\"},\"physicalResourceId\":{\"id\":\"eu-west-1_oGQHzXmbo-",
              {
                "Ref": "UserPoolUserPoolClient40176907"
              },
              "\"}}"
            ]
          ]
        },
        "InstallLatestAwsSdk": false
      },
      "DependsOn": [
        "CloudFrontAuthClientUpdateCustomResourcePolicyD9204C32"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/ClientUpdate/Resource/Resource/Default"
      }
    },
    "CloudFrontAuthClientUpdateCustomResourcePolicyD9204C32": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:UpdateUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":cognito-idp:eu-west-1:001112238813:userpool/eu-west-1_oGQHzXmbo"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CloudFrontAuthClientUpdateCustomResourcePolicyD9204C32",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CloudFrontAuth/ClientUpdate/Resource/CustomResourcePolicy/Resource"
      }
    },
    "lifliginfracloudfrontauthgeneratesecretproviderFunctionServiceRoleA052E250": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.cloudfront-auth.generate-secret.provider/Function/ServiceRole/Resource"
      }
    },
    "lifliginfracloudfrontauthgeneratesecretproviderFunction251907C7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "lifliginfracloudfrontauthgeneratesecretproviderFunctionServiceRoleA052E250",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "DependsOn": [
        "lifliginfracloudfrontauthgeneratesecretproviderFunctionServiceRoleA052E250"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.cloudfront-auth.generate-secret.provider/Function/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "lifliginfracloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleCB18E252": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.cloudfront-auth.generate-secret.provider/Provider/framework-onEvent/ServiceRole/Resource"
      }
    },
    "lifliginfracloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicy518E1DB7": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "lifliginfracloudfrontauthgeneratesecretproviderFunction251907C7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "lifliginfracloudfrontauthgeneratesecretproviderFunction251907C7",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "lifliginfracloudfrontauthgeneratesecretproviderFunction251907C7",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "lifliginfracloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicy518E1DB7",
        "Roles": [
          {
            "Ref": "lifliginfracloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleCB18E252"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.cloudfront-auth.generate-secret.provider/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "lifliginfracloudfrontauthgeneratesecretproviderProviderframeworkonEvent629CC1D7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Description": "AWS CDK resource provider framework - onEvent (incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.cloudfront-auth.generate-secret.provider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "lifliginfracloudfrontauthgeneratesecretproviderFunction251907C7",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "lifliginfracloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleCB18E252",
            "Arn"
          ]
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "lifliginfracloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicy518E1DB7",
        "lifliginfracloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleCB18E252"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.cloudfront-auth.generate-secret.provider/Provider/framework-onEvent/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/AWS679f53fac002430cb0da5b7982bd2287/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "lifliginfralambdaconfigproviderUpdateCodeFnServiceRole1C9B6DC9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.lambda-config.provider/UpdateCodeFn/ServiceRole/Resource"
      }
    },
    "lifliginfralambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicy02148DBC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:GetFunction",
                "lambda:GetFunctionConfiguration",
                "lambda:UpdateFunctionCode"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "lifliginfralambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicy02148DBC",
        "Roles": [
          {
            "Ref": "lifliginfralambdaconfigproviderUpdateCodeFnServiceRole1C9B6DC9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.lambda-config.provider/UpdateCodeFn/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "lifliginfralambdaconfigproviderUpdateCodeFnB8571480": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "lifliginfralambdaconfigproviderUpdateCodeFnServiceRole1C9B6DC9",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "lifliginfralambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicy02148DBC",
        "lifliginfralambdaconfigproviderUpdateCodeFnServiceRole1C9B6DC9"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.lambda-config.provider/UpdateCodeFn/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "lifliginfralambdaconfigproviderProviderframeworkonEventServiceRoleD0656D3D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.lambda-config.provider/Provider/framework-onEvent/ServiceRole/Resource"
      }
    },
    "lifliginfralambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy554FD5A5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "lifliginfralambdaconfigproviderUpdateCodeFnB8571480",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "lifliginfralambdaconfigproviderUpdateCodeFnB8571480",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "lifliginfralambdaconfigproviderUpdateCodeFnB8571480",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "lifliginfralambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy554FD5A5",
        "Roles": [
          {
            "Ref": "lifliginfralambdaconfigproviderProviderframeworkonEventServiceRoleD0656D3D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.lambda-config.provider/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "lifliginfralambdaconfigproviderProviderframeworkonEvent1D60D68A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Description": "AWS CDK resource provider framework - onEvent (incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.lambda-config.provider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "lifliginfralambdaconfigproviderUpdateCodeFnB8571480",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "lifliginfralambdaconfigproviderProviderframeworkonEventServiceRoleD0656D3D",
            "Arn"
          ]
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "lifliginfralambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy554FD5A5",
        "lifliginfralambdaconfigproviderProviderframeworkonEventServiceRoleD0656D3D"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/liflig-infra.lambda-config.provider/Provider/framework-onEvent/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "DistributionOrigin1S3Origin5F5C0696": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for incubrepometricspipelineIncubatorincubrepometricsmainDistributionOrigin1FF340716"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Distribution/Origin1/S3Origin/Resource"
      }
    },
    "DistributionOrigin2S3OriginE484D4BF": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for incubrepometricspipelineIncubatorincubrepometricsmainDistributionOrigin277E41C82"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Distribution/Origin2/S3Origin/Resource"
      }
    },
    "Distribution830FAC52": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "CacheBehaviors": [
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "CloudFrontAuthParseAuthFn462E5263",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/auth/callback",
              "TargetOriginId": "incubrepometricspipelineIncubatorincubrepometricsmainDistributionOrigin1FF340716",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "CloudFrontAuthRefreshAuthFnF048EC20",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/auth/refresh",
              "TargetOriginId": "incubrepometricspipelineIncubatorincubrepometricsmainDistributionOrigin1FF340716",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "CloudFrontAuthSignOutFn7E430F35",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/auth/sign-out",
              "TargetOriginId": "incubrepometricspipelineIncubatorincubrepometricsmainDistributionOrigin1FF340716",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "CloudFrontAuthCheckAuthFnF82A663E",
                      "FunctionArn"
                    ]
                  }
                },
                {
                  "EventType": "origin-response",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "CloudFrontAuthHttpHeadersFn7FA81DC9",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/data/*",
              "TargetOriginId": "incubrepometricspipelineIncubatorincubrepometricsmainDistributionOrigin277E41C82",
              "ViewerProtocolPolicy": "redirect-to-https"
            }
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "LambdaFunctionAssociations": [
              {
                "EventType": "viewer-request",
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "CloudFrontAuthCheckAuthFnF82A663E",
                    "FunctionArn"
                  ]
                }
              },
              {
                "EventType": "origin-response",
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "CloudFrontAuthHttpHeadersFn7FA81DC9",
                    "FunctionArn"
                  ]
                }
              }
            ],
            "TargetOriginId": "incubrepometricspipelineIncubatorincubrepometricsmainDistributionOrigin1FF340716",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "WebappBucket620531E5",
                  "RegionalDomainName"
                ]
              },
              "Id": "incubrepometricspipelineIncubatorincubrepometricsmainDistributionOrigin1FF340716",
              "OriginPath": "/web",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "DistributionOrigin1S3Origin5F5C0696"
                      }
                    ]
                  ]
                }
              }
            },
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "WebappDataBucket777722B9",
                  "RegionalDomainName"
                ]
              },
              "Id": "incubrepometricspipelineIncubatorincubrepometricsmainDistributionOrigin277E41C82",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "DistributionOrigin2S3OriginE484D4BF"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "PriceClass": "PriceClass_100"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Distribution/Resource"
      }
    },
    "WebappDeployWebappDeployResourceServiceRole6D7BB70F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDeploy/WebappDeployResource/ServiceRole/Resource"
      }
    },
    "WebappDeployWebappDeployResourceServiceRoleDefaultPolicy5CB528F1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudfront:CreateInvalidation",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebappBucket620531E5",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebappBucket620531E5",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::cdk-liflig-assets-001112238813-eu-west-1"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::cdk-liflig-assets-001112238813-eu-west-1/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WebappDeployWebappDeployResourceServiceRoleDefaultPolicy5CB528F1",
        "Roles": [
          {
            "Ref": "WebappDeployWebappDeployResourceServiceRole6D7BB70F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDeploy/WebappDeployResource/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "WebappDeployWebappDeployResource568A3E18": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Environment": {
          "Variables": {
            "DEPLOY_LOG_BUCKET_URL": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "WebappBucket620531E5"
                  },
                  "/deployments.log"
                ]
              ]
            },
            "EXPIRE_SECONDS": "432000",
            "TARGET_BUCKET_URL": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "WebappBucket620531E5"
                  },
                  "/web"
                ]
              ]
            },
            "CF_DISTRIBUTION_ID": {
              "Ref": "Distribution830FAC52"
            }
          }
        },
        "Handler": "webapp_deploy.main.handler",
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "WebappDeployWebappDeployResourceServiceRole6D7BB70F",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "WebappDeployWebappDeployResourceServiceRoleDefaultPolicy5CB528F1",
        "WebappDeployWebappDeployResourceServiceRole6D7BB70F"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDeploy/WebappDeployResource/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "WebappDeployProviderframeworkonEventServiceRole6401B28E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDeploy/Provider/framework-onEvent/ServiceRole/Resource"
      }
    },
    "WebappDeployProviderframeworkonEventServiceRoleDefaultPolicy007A69B8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebappDeployWebappDeployResource568A3E18",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebappDeployWebappDeployResource568A3E18",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "WebappDeployWebappDeployResource568A3E18",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WebappDeployProviderframeworkonEventServiceRoleDefaultPolicy007A69B8",
        "Roles": [
          {
            "Ref": "WebappDeployProviderframeworkonEventServiceRole6401B28E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDeploy/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "WebappDeployProviderframeworkonEvent095845EB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Description": "AWS CDK resource provider framework - onEvent (incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDeploy/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "WebappDeployWebappDeployResource568A3E18",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "WebappDeployProviderframeworkonEventServiceRole6401B28E",
            "Arn"
          ]
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "WebappDeployProviderframeworkonEventServiceRoleDefaultPolicy007A69B8",
        "WebappDeployProviderframeworkonEventServiceRole6401B28E"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDeploy/Provider/framework-onEvent/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "WebappDeployCustomResourceCA418804": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "WebappDeployProviderframeworkonEvent095845EB",
            "Arn"
          ]
        },
        "artifactS3Url": "s3://cdk-liflig-assets-001112238813-eu-west-1/snapshot-value.zip"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/WebappDeploy/CustomResource/Default"
      }
    },
    "CollectorServiceRole78F40CC4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Collector/ServiceRole/Resource"
      }
    },
    "CollectorServiceRoleDefaultPolicy51652F58": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/github-token-??????"
                  ]
                ]
              }
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/snyk-token-??????"
                  ]
                ]
              }
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/sonarcloud-token-??????"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DataBucketE3889A50",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DataBucketE3889A50",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CollectorServiceRoleDefaultPolicy51652F58",
        "Roles": [
          {
            "Ref": "CollectorServiceRole78F40CC4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Collector/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Collector9EBA7CF5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Environment": {
          "Variables": {
            "GITHUB_TOKEN_SECRET_ID": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/github-token"
                ]
              ]
            },
            "SNYK_TOKEN_SECRET_ID": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/snyk-token"
                ]
              ]
            },
            "SONARCLOUD_TOKEN_SECRET_ID": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/sonarcloud-token"
                ]
              ]
            },
            "DATA_BUCKET_NAME": {
              "Ref": "DataBucketE3889A50"
            },
            "XDG_CACHE_HOME": "/tmp"
          }
        },
        "Handler": "index.collectHandler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "CollectorServiceRole78F40CC4",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 300
      },
      "DependsOn": [
        "CollectorServiceRoleDefaultPolicy51652F58",
        "CollectorServiceRole78F40CC4"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Collector/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "CollectorLogRetentionF9D3AFBE": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "Collector9EBA7CF5"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Collector/LogRetention/Resource"
      }
    },
    "CollectorCollectorLogGroupWarningMetricFilter3DCCB631": {
      "Type": "AWS::Logs::MetricFilter",
      "Properties": {
        "FilterPattern": "WARN",
        "LogGroupName": {
          "Fn::GetAtt": [
            "CollectorLogRetentionF9D3AFBE",
            "LogGroupName"
          ]
        },
        "MetricTransformations": [
          {
            "MetricName": "Warnings",
            "MetricNamespace": {
              "Fn::Join": [
                "",
                [
                  "stack/incub-repo-metrics-main/",
                  {
                    "Ref": "Collector9EBA7CF5"
                  },
                  "/Warnings"
                ]
              ]
            },
            "MetricValue": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Collector/Collector-LogGroup/WarningMetricFilter/Resource"
      }
    },
    "CollectorScheduleDC767626": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 0/6 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Collector9EBA7CF5",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CollectorSchedule/Resource"
      }
    },
    "CollectorScheduleAllowEventRuleincubrepometricspipelineIncubatorincubrepometricsmainCollector5F0CF411366F0188": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Collector9EBA7CF5",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CollectorScheduleDC767626",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CollectorSchedule/AllowEventRuleincubrepometricspipelineIncubatorincubrepometricsmainCollector5F0CF411"
      }
    },
    "CollectorNotSuccessWarningCA9F6270": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackwarningstopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "Function ",
              {
                "Ref": "Collector9EBA7CF5"
              },
              " has not run successful for the last 12 hours"
            ]
          ]
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "invocations - errors",
            "Id": "expr_1",
            "ReturnData": true
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Collector9EBA7CF5"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 43200,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Collector9EBA7CF5"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 43200,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "OKActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackwarningstopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "Threshold": 0,
        "TreatMissingData": "breaching"
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CollectorNotSuccessWarning/Resource"
      }
    },
    "CollectorNotSuccessAlarm73851829": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackalarmtopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "Function ",
              {
                "Ref": "Collector9EBA7CF5"
              },
              " has not run successful for the last 1 day"
            ]
          ]
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "invocations - errors",
            "Id": "expr_1",
            "ReturnData": true
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Collector9EBA7CF5"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 86400,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Collector9EBA7CF5"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 86400,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "OKActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackalarmtopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "Threshold": 0,
        "TreatMissingData": "breaching"
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CollectorNotSuccessAlarm/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs22.x",
        "Timeout": 900,
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "CollectorWarningAlarmA0B4423A": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackwarningstopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "Collector9EBA7CF5"
              },
              " logged a warning."
            ]
          ]
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "Warnings",
        "Namespace": {
          "Fn::Join": [
            "",
            [
              "stack/incub-repo-metrics-main/",
              {
                "Ref": "Collector9EBA7CF5"
              },
              "/Warnings"
            ]
          ]
        },
        "OKActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackwarningstopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching"
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/CollectorWarningAlarm/Resource"
      }
    },
    "AggregatorServiceRole50457C61": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Aggregator/ServiceRole/Resource"
      }
    },
    "AggregatorServiceRoleDefaultPolicyEBDCB410": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudfront:CreateInvalidation",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DataBucketE3889A50",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DataBucketE3889A50",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebappDataBucket777722B9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebappDataBucket777722B9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AggregatorServiceRoleDefaultPolicyEBDCB410",
        "Roles": [
          {
            "Ref": "AggregatorServiceRole50457C61"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Aggregator/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Aggregator84F1B3DF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Environment": {
          "Variables": {
            "DATA_BUCKET_NAME": {
              "Ref": "DataBucketE3889A50"
            },
            "WEBAPP_DATA_BUCKET_NAME": {
              "Ref": "WebappDataBucket777722B9"
            },
            "CF_DISTRIBUTION_ID": {
              "Ref": "Distribution830FAC52"
            }
          }
        },
        "Handler": "index.aggregateHandler",
        "Layers": [
          "arn:aws:lambda:eu-west-1:580247275435:layer:LambdaInsightsExtension:38"
        ],
        "MemorySize": 300,
        "Role": {
          "Fn::GetAtt": [
            "AggregatorServiceRole50457C61",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 300
      },
      "DependsOn": [
        "AggregatorServiceRoleDefaultPolicyEBDCB410",
        "AggregatorServiceRole50457C61"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Aggregator/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "AggregatorSchedule80C87EEE": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(10 0/6 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Aggregator84F1B3DF",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/AggregatorSchedule/Resource"
      }
    },
    "AggregatorScheduleAllowEventRuleincubrepometricspipelineIncubatorincubrepometricsmainAggregator0CC5D92026EEEE0C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Aggregator84F1B3DF",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AggregatorSchedule80C87EEE",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/AggregatorSchedule/AllowEventRuleincubrepometricspipelineIncubatorincubrepometricsmainAggregator0CC5D920"
      }
    },
    "AggregatorNotSuccessWarning2CDA5617": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackwarningstopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "Function ",
              {
                "Ref": "Aggregator84F1B3DF"
              },
              " has not run successful for the last 12 hours"
            ]
          ]
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "invocations - errors",
            "Id": "expr_1",
            "ReturnData": true
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Aggregator84F1B3DF"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 43200,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Aggregator84F1B3DF"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 43200,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "OKActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackwarningstopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "Threshold": 0,
        "TreatMissingData": "breaching"
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/AggregatorNotSuccessWarning/Resource"
      }
    },
    "AggregatorNotSuccessAlarm955602B9": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackalarmtopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "Function ",
              {
                "Ref": "Aggregator84F1B3DF"
              },
              " has not run successful for the last 1 day"
            ]
          ]
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "invocations - errors",
            "Id": "expr_1",
            "ReturnData": true
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Aggregator84F1B3DF"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 86400,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Aggregator84F1B3DF"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 86400,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "OKActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackalarmtopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "Threshold": 0,
        "TreatMissingData": "breaching"
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/AggregatorNotSuccessAlarm/Resource"
      }
    },
    "ReporterServiceRole0C7A2B1F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Reporter/ServiceRole/Resource"
      }
    },
    "ReporterServiceRoleDefaultPolicy768D488A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DataBucketE3889A50",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DataBucketE3889A50",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ReporterServiceRoleDefaultPolicy768D488A",
        "Roles": [
          {
            "Ref": "ReporterServiceRole0C7A2B1F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Reporter/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Reporter08098DAC": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-liflig-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Environment": {
          "Variables": {
            "DATA_BUCKET_NAME": {
              "Ref": "DataBucketE3889A50"
            },
            "SLACK_WEBHOOK_URL": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":secretsmanager:eu-west-1:001112238813:secret:/incub/repo-metrics/reporter-slack-webhook-url:SecretString:url::}}"
                ]
              ]
            },
            "SERIAL": "0"
          }
        },
        "Handler": "index.reportHandler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "ReporterServiceRole0C7A2B1F",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "repo-metrics"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-repo-metrics"
          },
          {
            "Key": "StackName",
            "Value": "incub-repo-metrics-main"
          }
        ],
        "Timeout": 300
      },
      "DependsOn": [
        "ReporterServiceRoleDefaultPolicy768D488A",
        "ReporterServiceRole0C7A2B1F"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/Reporter/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "ReporterSchedule65E61F50": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 7 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Reporter08098DAC",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/ReporterSchedule/Resource"
      }
    },
    "ReporterScheduleAllowEventRuleincubrepometricspipelineIncubatorincubrepometricsmainReporter593FA6D5D56F3D22": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Reporter08098DAC",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ReporterSchedule65E61F50",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/ReporterSchedule/AllowEventRuleincubrepometricspipelineIncubatorincubrepometricsmainReporter593FA6D5"
      }
    },
    "ReporterNotSuccessAlarm26AEAE42": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackwarningstopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "Function ",
              {
                "Ref": "Reporter08098DAC"
              },
              " has not run successful for the last 1 day"
            ]
          ]
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "invocations - errors",
            "Id": "expr_1",
            "ReturnData": true
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Reporter08098DAC"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 86400,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "Reporter08098DAC"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 86400,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "OKActions": [
          {
            "Ref": "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackwarningstopicarnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "Threshold": 0,
        "TreatMissingData": "breaching"
      },
      "Metadata": {
        "aws:cdk:path": "incub-repo-metrics-pipeline/Incubator/incub-repo-metrics-main/ReporterNotSuccessAlarm/Resource"
      }
    }
  },
  "Parameters": {
    "CloudFrontAuthCheckAuthFnImportNonce53D0BEE3": {
      "Type": "String",
      "Default": "snapshot"
    },
    "CloudFrontAuthHttpHeadersFnImportNonce9F041AEE": {
      "Type": "String",
      "Default": "snapshot"
    },
    "CloudFrontAuthParseAuthFnImportNonceCF483E0E": {
      "Type": "String",
      "Default": "snapshot"
    },
    "CloudFrontAuthRefreshAuthFnImportNonce88A0DD7E": {
      "Type": "String",
      "Default": "snapshot"
    },
    "CloudFrontAuthSignOutFnImportNonceCA635C9B": {
      "Type": "String",
      "Default": "snapshot"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74CheckAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c81e650052f36c5e83f2cec440852f2592a49b5f74-CheckAuthFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74HttpHeadersFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c81e650052f36c5e83f2cec440852f2592a49b5f74-HttpHeadersFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74ParseAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c81e650052f36c5e83f2cec440852f2592a49b5f74-ParseAuthFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74RefreshAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c81e650052f36c5e83f2cec440852f2592a49b5f74-RefreshAuthFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubrepometricsedgec81e650052f36c5e83f2cec440852f2592a49b5f74SignOutFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-repo-metrics-edge/c81e650052f36c5e83f2cec440852f2592a49b5f74-SignOutFunction-function-arn"
    },
    "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackwarningstopicarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/liflig-cdk/incub/platform/incubator-common-core/slack-warnings-topic-arn"
    },
    "SsmParameterValuelifligcdkincubplatformincubatorcommoncoreslackalarmtopicarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/liflig-cdk/incub/platform/incubator-common-core/slack-alarm-topic-arn"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/liflig/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Outputs": {
    "DataBucketNameOutput": {
      "Value": {
        "Ref": "DataBucketE3889A50"
      }
    },
    "WebappDataBucketNameOutput": {
      "Value": {
        "Ref": "WebappDataBucket777722B9"
      }
    },
    "WebappUrlOutput": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "Distribution830FAC52",
                "DomainName"
              ]
            }
          ]
        ]
      }
    },
    "DistributionIdOutput": {
      "Value": {
        "Ref": "Distribution830FAC52"
      }
    },
    "ReporterFunctionArnOutput": {
      "Value": {
        "Fn::GetAtt": [
          "Reporter08098DAC",
          "Arn"
        ]
      }
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}