version: "3"

output: prefixed

vars:
  infra: "packages/infrastructure"
  webapp: "packages/webapp"
  lambdas: "packages/repo-collector"
  types: "packages/repo-collector-types"

tasks:
  default:
    cmds:
      - task: build

  build:
    desc: Build project
    deps: [infra.build]

  snapshots:
    desc: Update infrastructure snapshots
    deps: [infra.snapshots]

  check-snapshots:
    desc: Check if infrastructure snapshots are up-to-date
    deps: [infra.check-snapshots]

  clean:
    desc: Clean project
    deps: [infra.clean, webapp.clean, lambdas.clean, types.clean]

  clean-all:
    desc: Clean project and dependencies
    deps:
      [infra.clean-all, webapp.clean-all, lambdas.clean-all, types.clean-all]

  # test if AWS session exists here?
  update-local-data:
    desc: Update local data (local file system)
    cmds:
      - task: lambdas.update-local-data

  download-s3-data:
    desc: Download data from S3
    cmds:
      - task: lambdas.download-s3-data

  serve-local-data:
    desc: Serve local data
    cmds:
      - task: lambdas.serve-local-data

  # test if AWS session exists here?
  update-remote-data:
    desc: Update remote data (the running instance of repo-metrics)
    cmds:
      - task: lambdas.update-remote-data

  upgrade-dependencies:
    desc: Update dependencies
    deps:
      - types.upgrade-dependencies
      - lambdas.upgrade-dependencies
      - webapp.upgrade-dependencies
      - infra.upgrade-dependencies

  migrate-biome-schema:
    desc: Migrate biome schema
    deps:
      - infra.migrate-biome-schema
      - webapp.migrate-biome-schema
      - lambdas.migrate-biome-schema
      - types.migrate-biome-schema

  ################################
  # infra
  ################################
  infra.build:
    dir: "{{.infra}}"
    deps: [lambdas.build, webapp.build]
    cmds:
      - npm install
      - npm run lint
      - task: infra.snapshots

  infra.snapshots:
    dir: "{{.infra}}"
    cmd: npm run snapshots

  infra.check-snapshots:
    dir: "{{.infra}}"
    cmds:
      - git status __snapshots__
      - git add __snapshots__ --intent-to-add
      - git diff --exit-code __snapshots__

  infra.clean:
    dir: "{{.infra}}"
    cmd: rm -rf cdk.out

  infra.clean-all:
    dir: "{{.infra}}"
    deps: [infra.clean]
    cmd: rm -rf node_modules

  infra.upgrade-dependencies:
    dir: "{{.infra}}"
    cmd: npx ncu --upgrade

  infra.migrate-biome-schema:
    dir: "{{.infra}}"
    cmd: npx biome migrate --write

  ################################
  # lambdas
  ################################
  lambdas.build:
    dir: "{{.lambdas}}"
    deps: [types.build]
    cmds:
      - npm install
      - npm run lint
      - npm run test
      - npm run build

  lambdas.update-local-data:
    dir: "{{.lambdas}}"
    cmds:
      - npm run collect-locally
      - npm run aggregate-locally

  lambdas.report-locally:
    dir: "{{.lambdas}}"
    cmd: npm run report-locally

  lambdas.serve-local-data:
    dir: "{{.lambdas}}"
    cmd: npm run serve

  lambdas.download-s3-data:
    dir: "{{.lambdas}}"
    cmd: ./fetch-s3-data.sh

  lambdas.update-remote-data:
    dir: "{{.lambdas}}"
    cmd: aws stepfunctions start-execution --state-machine-arn "arn:aws:states:eu-west-1:001112238813:stateMachine:StateMachine2E01A3A5-2QjhssOgQmZm"

  lambdas.clean:
    dir: "{{.lambdas}}"
    cmd: rm -rf dist

  lambdas.clean-all:
    dir: "{{.lambdas}}"
    deps: [lambdas.clean]
    cmd: rm -rf node_modules

  lambdas.upgrade-dependencies:
    dir: "{{.lambdas}}"
    cmd: npx ncu --upgrade

  lambdas.migrate-biome-schema:
    dir: "{{.lambdas}}"
    cmd: npx biome migrate --write

  ################################
  # webapp
  ################################
  webapp.build:
    dir: "{{.webapp}}"
    deps: [types.build]
    cmds:
      - npm install
      - npm run lint
      - npm run build
      - npm run test

  webapp.clean:
    dir: "{{.webapp}}"
    cmds:
      - rm -rf dist
      - rm -rf build
      - rm -rf coverage

  webapp.clean-all:
    dir: "{{.webapp}}"
    deps: [webapp.clean]
    cmd: rm -rf node_modules

  webapp.start-webserver:
    dir: "{{.webapp}}"
    cmd: npm run start

  webapp.migrate-biome-schema:
    dir: "{{.webapp}}"
    cmd: npx biome migrate --write

  webapp.upgrade-dependencies:
    dir: "{{.webapp}}"
    cmd: npx ncu --upgrade

  ################################
  # types
  ################################
  types.build:
    dir: "{{.types}}"
    run: once
    cmds:
      - npm install
      - npm run lint
      - npm run build

  types.clean:
    dir: "{{.types}}"
    cmd: rm -rf lib

  types.clean-all:
    dir: "{{.types}}"
    deps: [types.clean]
    cmd: rm -rf node_modules

  types.upgrade-dependencies:
    dir: "{{.types}}"
    cmd: npx ncu --upgrade

  types.migrate-biome-schema:
    dir: "{{.types}}"
    cmd: npx biome migrate --write
